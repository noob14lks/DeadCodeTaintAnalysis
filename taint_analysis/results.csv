check_id,file,start_line,start_col,end_line,end_col,message,severity,confidence,category,likelihood,impact,fingerprint,engine_kind
generic.html-templates.security.unquoted-attribute-var.unquoted-attribute-var,dataset\github_repos\flask\examples\celery\src\task_app\templates\index.html,14,34,14,60,"Detected a unquoted template variable as an attribute. If unquoted, a malicious actor could inject custom JavaScript handlers. To fix this, add quotes around the template expression, like this: ""{{ expr }}"".",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
generic.html-templates.security.unquoted-attribute-var.unquoted-attribute-var,dataset\github_repos\flask\examples\celery\src\task_app\templates\index.html,24,36,24,64,"Detected a unquoted template variable as an attribute. If unquoted, a malicious actor could inject custom JavaScript handlers. To fix this, add quotes around the template expression, like this: ""{{ expr }}"".",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
generic.html-templates.security.unquoted-attribute-var.unquoted-attribute-var,dataset\github_repos\flask\examples\celery\src\task_app\templates\index.html,32,38,32,68,"Detected a unquoted template variable as an attribute. If unquoted, a malicious actor could inject custom JavaScript handlers. To fix this, add quotes around the template expression, like this: ""{{ expr }}"".",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
generic.html-templates.security.unquoted-attribute-var.unquoted-attribute-var,dataset\github_repos\flask\examples\javascript\js_example\templates\xhr.html,7,12,7,46,"Detected a unquoted template variable as an attribute. If unquoted, a malicious actor could inject custom JavaScript handlers. To fix this, add quotes around the template expression, like this: ""{{ expr }}"".",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
python.lang.security.audit.eval-detected.eval-detected,dataset\github_repos\flask\src\flask\cli.py,1023,13,1023,58,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",WARNING,LOW,security,LOW,HIGH,requires login,OSS
python.lang.security.audit.exec-detected.exec-detected,dataset\github_repos\flask\src\flask\config.py,209,17,209,80,"Detected the use of exec(). exec() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",WARNING,LOW,security,LOW,HIGH,requires login,OSS
python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1,dataset\github_repos\flask\src\flask\sessions.py,295,12,295,32,Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.,WARNING,MEDIUM,security,LOW,MEDIUM,requires login,OSS
python.requests.security.disabled-cert-validation.disabled-cert-validation,dataset\github_repos\httpie\httpie\internal\update_warnings.py,44,16,44,62,Certificate verification has been explicitly disabled. This permits insecure connections to insecure servers. Re-enable certification validation.,ERROR,LOW,security,LOW,LOW,requires login,OSS
python.lang.security.use-defused-xml.use-defused-xml,dataset\github_repos\httpie\httpie\output\formatters\xml.py,7,5,7,41,"The Python documentation recommends using `defusedxml` instead of `xml` because the native Python `xml` library is vulnerable to XML External Entity (XXE) attacks. These attacks can leak confidential data and ""XML bombs"" can cause denial of service.",ERROR,LOW,security,LOW,MEDIUM,requires login,OSS
python.lang.security.use-defused-xml.use-defused-xml,dataset\github_repos\httpie\httpie\output\formatters\xml.py,63,9,63,49,"The Python documentation recommends using `defusedxml` instead of `xml` because the native Python `xml` library is vulnerable to XML External Entity (XXE) attacks. These attacks can leak confidential data and ""XML bombs"" can cause denial of service.",ERROR,LOW,security,LOW,MEDIUM,requires login,OSS
python.lang.security.audit.network.bind.avoid-bind-to-all-interfaces,dataset\github_repos\paramiko\demos\demo_server.py,119,5,121,26,"Running `socket.bind` to 0.0.0.0, or empty string could unexpectedly expose the server publicly as it binds to all available interfaces. Consider instead getting correct address from an environment variable or configuration file.",INFO,HIGH,security,HIGH,MEDIUM,requires login,OSS
python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1,dataset\github_repos\paramiko\paramiko\config.py,449,19,449,40,Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.,WARNING,MEDIUM,security,LOW,MEDIUM,requires login,OSS
python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1,dataset\github_repos\paramiko\paramiko\hostkeys.py,296,31,296,37,Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.,WARNING,MEDIUM,security,LOW,MEDIUM,requires login,OSS
python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1,dataset\github_repos\paramiko\paramiko\hostkeys.py,301,29,301,35,Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.,WARNING,MEDIUM,security,LOW,MEDIUM,requires login,OSS
python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1,dataset\github_repos\paramiko\paramiko\kex_gss.py,230,13,230,26,Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.,WARNING,MEDIUM,security,LOW,MEDIUM,requires login,OSS
python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1,dataset\github_repos\paramiko\paramiko\kex_gss.py,269,13,269,31,Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.,WARNING,MEDIUM,security,LOW,MEDIUM,requires login,OSS
python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1,dataset\github_repos\paramiko\paramiko\kex_gss.py,532,13,532,31,Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.,WARNING,MEDIUM,security,LOW,MEDIUM,requires login,OSS
python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1,dataset\github_repos\paramiko\paramiko\kex_gss.py,634,13,634,31,Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.,WARNING,MEDIUM,security,LOW,MEDIUM,requires login,OSS
generic.html-templates.security.var-in-href.var-in-href,dataset\github_repos\requests\docs\_templates\sidebarintro.html,2,6,2,37,"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=""/{{link}}""`). You may also consider setting the Content Security Policy (CSP) header.",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
generic.html-templates.security.var-in-href.var-in-href,dataset\github_repos\requests\docs\_templates\sidebarintro.html,19,10,19,48,"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=""/{{link}}""`). You may also consider setting the Content Security Policy (CSP) header.",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
generic.html-templates.security.var-in-href.var-in-href,dataset\github_repos\requests\docs\_templates\sidebarintro.html,20,10,20,46,"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=""/{{link}}""`). You may also consider setting the Content Security Policy (CSP) header.",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
generic.html-templates.security.var-in-href.var-in-href,dataset\github_repos\requests\docs\_templates\sidebarintro.html,21,10,21,36,"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=""/{{link}}""`). You may also consider setting the Content Security Policy (CSP) header.",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
generic.html-templates.security.var-in-href.var-in-href,dataset\github_repos\requests\docs\_templates\sidebarintro.html,22,10,22,71,"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=""/{{link}}""`). You may also consider setting the Content Security Policy (CSP) header.",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
generic.html-templates.security.var-in-href.var-in-href,dataset\github_repos\requests\docs\_templates\sidebarintro.html,23,10,23,49,"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=""/{{link}}""`). You may also consider setting the Content Security Policy (CSP) header.",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
generic.html-templates.security.var-in-href.var-in-href,dataset\github_repos\requests\docs\_templates\sidebarintro.html,27,10,27,54,"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=""/{{link}}""`). You may also consider setting the Content Security Policy (CSP) header.",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
generic.html-templates.security.var-in-href.var-in-href,dataset\github_repos\requests\docs\_templates\sidebarlogo.html,14,10,14,48,"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=""/{{link}}""`). You may also consider setting the Content Security Policy (CSP) header.",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
generic.html-templates.security.var-in-href.var-in-href,dataset\github_repos\requests\docs\_templates\sidebarlogo.html,15,10,15,46,"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=""/{{link}}""`). You may also consider setting the Content Security Policy (CSP) header.",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
generic.html-templates.security.var-in-href.var-in-href,dataset\github_repos\requests\docs\_templates\sidebarlogo.html,16,10,16,36,"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=""/{{link}}""`). You may also consider setting the Content Security Policy (CSP) header.",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
generic.html-templates.security.var-in-href.var-in-href,dataset\github_repos\requests\docs\_templates\sidebarlogo.html,17,10,17,71,"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=""/{{link}}""`). You may also consider setting the Content Security Policy (CSP) header.",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
generic.html-templates.security.var-in-href.var-in-href,dataset\github_repos\requests\docs\_templates\sidebarlogo.html,18,10,18,49,"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=""/{{link}}""`). You may also consider setting the Content Security Policy (CSP) header.",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
generic.html-templates.security.var-in-href.var-in-href,dataset\github_repos\requests\docs\_templates\sidebarlogo.html,22,10,22,54,"Detected a template variable used in an anchor tag with the 'href' attribute. This allows a malicious actor to input the 'javascript:' URI and is subject to cross- site scripting (XSS) attacks. If using Flask, use 'url_for()' to safely generate a URL. If using Django, use the 'url' filter to safely generate a URL. If using Mustache, use a URL encoding library, or prepend a slash '/' to the variable for relative links (`href=""/{{link}}""`). You may also consider setting the Content Security Policy (CSP) header.",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
python.lang.security.audit.exec-detected.exec-detected,dataset\github_repos\requests\setup.py,54,5,54,26,"Detected the use of exec(). exec() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",WARNING,LOW,security,LOW,HIGH,requires login,OSS
python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1,dataset\github_repos\requests\src\requests\auth.py,156,24,156,39,Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.,WARNING,MEDIUM,security,LOW,MEDIUM,requires login,OSS
python.lang.security.insecure-hash-algorithms.insecure-hash-algorithm-sha1,dataset\github_repos\requests\src\requests\auth.py,205,18,205,33,Detected SHA1 hash algorithm which is considered insecure. SHA1 is not collision resistant and is therefore not suitable as a cryptographic signature. Use SHA256 or SHA3 instead.,WARNING,MEDIUM,security,LOW,MEDIUM,requires login,OSS
python.lang.security.deserialization.pickle.avoid-pickle,dataset\github_repos\sqlalchemy\lib\sqlalchemy\ext\serializer.py,94,41,94,65,"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
python.lang.security.deserialization.pickle.avoid-pickle,dataset\github_repos\sqlalchemy\lib\sqlalchemy\ext\serializer.py,98,29,98,60,"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
python.lang.security.deserialization.pickle.avoid-pickle,dataset\github_repos\sqlalchemy\lib\sqlalchemy\ext\serializer.py,105,21,105,74,"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
python.lang.security.deserialization.pickle.avoid-pickle,dataset\github_repos\sqlalchemy\lib\sqlalchemy\ext\serializer.py,150,23,150,54,"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
python.lang.security.deserialization.pickle.avoid-pickle,dataset\github_repos\sqlalchemy\lib\sqlalchemy\ext\serializer.py,153,23,153,52,"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
python.lang.security.deserialization.pickle.avoid-pickle,dataset\github_repos\sqlalchemy\lib\sqlalchemy\ext\serializer.py,156,23,156,52,"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
python.lang.security.deserialization.pickle.avoid-pickle,dataset\github_repos\sqlalchemy\lib\sqlalchemy\ext\serializer.py,160,23,160,54,"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
python.lang.security.audit.eval-detected.eval-detected,dataset\github_repos\sqlalchemy\lib\sqlalchemy\orm\clsregistry.py,544,21,544,58,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",WARNING,LOW,security,LOW,HIGH,requires login,OSS
python.lang.security.audit.exec-detected.exec-detected,dataset\github_repos\sqlalchemy\lib\sqlalchemy\orm\instrumentation.py,736,5,736,25,"Detected the use of exec(). exec() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",WARNING,LOW,security,LOW,HIGH,requires login,OSS
python.lang.security.audit.exec-detected.exec-detected,dataset\github_repos\sqlalchemy\lib\sqlalchemy\sql\lambdas.py,1264,9,1264,33,"Detected the use of exec(). exec() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",WARNING,LOW,security,LOW,HIGH,requires login,OSS
python.lang.security.audit.exec-detected.exec-detected,dataset\github_repos\sqlalchemy\lib\sqlalchemy\testing\plugin\pytestplugin.py,627,9,627,24,"Detected the use of exec(). exec() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",WARNING,LOW,security,LOW,HIGH,requires login,OSS
python.lang.security.deserialization.pickle.avoid-pickle,dataset\github_repos\sqlalchemy\lib\sqlalchemy\testing\util.py,63,42,63,67,"Avoid using `pickle`, which is known to lead to code execution vulnerabilities. When unpickling, the serialized data could be manipulated to run arbitrary code. Instead, consider serializing the relevant data as JSON or a similar text-based serialization format.",WARNING,LOW,security,LOW,MEDIUM,requires login,OSS
python.lang.security.audit.exec-detected.exec-detected,dataset\github_repos\sqlalchemy\lib\sqlalchemy\util\langhelpers.py,399,5,399,20,"Detected the use of exec(). exec() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",WARNING,LOW,security,LOW,HIGH,requires login,OSS
python.lang.security.audit.exec-detected.exec-detected,dataset\github_repos\sqlalchemy\lib\sqlalchemy\util\langhelpers.py,1003,9,1003,22,"Detected the use of exec(). exec() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",WARNING,LOW,security,LOW,HIGH,requires login,OSS
python.lang.security.audit.exec-detected.exec-detected,dataset\github_repos\sqlalchemy\lib\sqlalchemy\util\langhelpers.py,1998,5,1998,20,"Detected the use of exec(). exec() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",WARNING,LOW,security,LOW,HIGH,requires login,OSS
python.lang.security.audit.eval-detected.eval-detected,dataset\github_repos\sqlalchemy\lib\sqlalchemy\util\typing.py,269,26,269,66,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",WARNING,LOW,security,LOW,HIGH,requires login,OSS
python.lang.security.audit.eval-detected.eval-detected,dataset\github_repos\sqlalchemy\lib\sqlalchemy\util\typing.py,271,26,271,65,"Detected the use of eval(). eval() can be dangerous if used to evaluate dynamic content. If this content can be input from outside the program, this may be a code injection vulnerability. Ensure evaluated content is not definable by external sources.",WARNING,LOW,security,LOW,HIGH,requires login,OSS
